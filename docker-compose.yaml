version: "3.9"

services:
    api:
        build:
            context: .
            dockerfile: api.dockerfile
        depends_on:
            - db
        container_name: shipments_api
        environment:
            - DEBUG=${DEBUG}
            - DJANGO_KEY=${DJANGO_KEY}
            - DB_HOST=${DB_HOST}
            - DB_NAME=${DB_NAME}
            - DB_USER=${POSTGRES_USERNAME}
            - DB_PASSWORD=${POSTGRES_PASSWORD}
        ports:
            - "8000:8000"
        networks:
            - shipments
        volumes:
            - ./api:/api
        command: >
            sh -c "python manage.py wait_for_db &&
                python manage.py migrate &&
                python manage.py runserver 0.0.0.0:8000"

    db:
        image: postgres:14.5-alpine
        container_name: shipments_db
        environment: 
            - POSTGRES_DB=${DB_NAME}
            - POSTGRES_USERNAME=${POSTGRES_USERNAME}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
        ports:
            - "5432:5432"
        networks:
            - shipments
        volumes:
            - data:/var/lib/postgresql/data

    client:
        build:
            context: .
            dockerfile: client.dockerfile
            target: "setup-stage"
        depends_on:
            - api
        container_name: shipments_client
        ports:
            - "8080:8080"
        networks:
            - shipments
        volumes:
            - ./client/shipments_client:/app
        command: >
            /bin/sh -c "npm run serve"

networks:
    shipments:
        driver: bridge
volumes:
    data: